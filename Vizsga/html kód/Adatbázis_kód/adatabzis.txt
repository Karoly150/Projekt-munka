-- Adatbázis létrehozása
CREATE DATABASE csarda_db;
USE csarda_db;

-- Felhasználók táblája (azok számára, akik regisztrálnak az oldalon)
CREATE TABLE felhasznalok (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Egyedi azonosító
    nev VARCHAR(100) NOT NULL,          -- Felhasználó neve
    email VARCHAR(150) UNIQUE NOT NULL, -- Felhasználó e-mail cím
    jelszo VARCHAR(255) NOT NULL,       -- Jelszó(később titkosítva)
    letrehozva TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Regisztráció dátuma

Utólag hozzáadva:
    ALTER TABLE felhasznalok ADD lakcim VARCHAR(255) NOT NULL; -- Felhasználó lakcíme(rendeléshez szükséges)

);

-- Étlap és ételek táblája
CREATE TABLE etelek (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Egyedi azonosító
    nev VARCHAR(150) NOT NULL,          -- Étel neve
    leiras TEXT,                        -- Rövid leírás az ételről
    ar DECIMAL(10,2) NOT NULL,          -- Étel ára (Ft)
    kep VARCHAR(255),                   -- Kép elérési útvonala
    letrehozva TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Létrehozás dátuma

Utólag hozzáadva:

INSERT INTO etelek (nev, leiras, ar, kep) VALUES
('Gulyás', 'Hagyományos magyar gulyásleves', 1200.00, 'gulyas.jpg'),
('Pörkölt', 'Fűszeres marhapörkölt galuskával', 2500.00, 'porkolt.jpg'),
('Túrós csusza', 'Túrós tészta tejföllel', 1500.00, 'turos_csusza.jpg'),
('Fanta', 'Frissítő üdítő', 500.00, 'fanta.jpg');


);

-- Rendelések táblája (felhasználók által leadott rendelések)
CREATE TABLE rendelesek (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Egyedi rendelés azonosító
    felhasznalo_id INT NOT NULL,        -- Ki adta le a rendelést
    vegosszeg DECIMAL(10,2) NOT NULL,   -- Rendelés végösszege (Ft)
    allapot ENUM('függőben', 'teljesítve', 'törölve') DEFAULT 'függőben', -- Rendelés állapota(admin ellenőrzi majd)
    letrehozva TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Rendelés időpontja
    FOREIGN KEY (felhasznalo_id) REFERENCES felhasznalok(id) ON DELETE CASCADE
);

--  Rendelési tételek táblája (melyik rendelésben milyen ételek szerepelnek)
CREATE TABLE rendeles_tetelek (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Egyedi azonosító
    rendeles_id INT NOT NULL,           -- Rendelés azonosítója
    etel_id INT NOT NULL,               -- Melyik ételt rendelték
    mennyiseg INT NOT NULL,             -- Hány darabot rendeltek
    reszosszeg DECIMAL(10,2) NOT NULL,  -- (mennyiség * ár)
    FOREIGN KEY (rendeles_id) REFERENCES rendelesek(id) ON DELETE CASCADE,
    FOREIGN KEY (etel_id) REFERENCES etelek(id) ON DELETE CASCADE
);

-- Admin felhasználók táblája (akik az étlapot és rendeléseket kezelik)
CREATE TABLE adminok (
    id INT AUTO_INCREMENT PRIMARY KEY,  -- Egyedi azonosító
    felhasznalonev VARCHAR(100) UNIQUE NOT NULL, -- Admin név
    jelszo VARCHAR(255) NOT NULL        -- Titkosított jelszó
);
